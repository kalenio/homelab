services:

# ============================================================== #
# Jellyfin: https://github.com/jellyfin/jellyfin
# ============================================================== #

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:${JELLYFIN_VERS:-latest} # OR jellyfin/jellyfin (official)
    container_name: jellyfin
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 8192M
    runtime: nvidia
    env_file: galaxy.env
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - NVIDIA_VISIBLE_DEVICES=all
    devices:
      - /dev/nvidia-uvm
      - /dev/nvidia-uvm-tools
      - /dev/nvidia-modeset
      - /dev/nvidiactl
      - /dev/nvidia0
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ${SERIES_PATH}:/media-library/series:ro
      - ${MOVIES_PATH}:/media-library/movies:ro
    ports:
      - 8096:8096/tcp # http webUI
      - 8920:8920/tcp # https webUI
    networks:
      jelly_net:

# ============================================================== #
# Jellyseerr: https://github.com/Fallenbagel/jellyseerr
# ============================================================== #

  jellyseerr:
    image: fallenbagel/jellyseerr:${JELLYSEERR_VERS:-latest}
    container_name: jellyseerr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    cap_add:
      - NET_ADMIN
    env_file: galaxy.env
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    volumes:
      - ./jellyseerr/config:/app/config
    ports:
      - 5055:5055
    networks:
      jelly_net:

# ============================================================== #
# Navidrome: https://github.com/navidrome/navidrome
# ============================================================== #

  navidrome: # https://www.navidrome.org/docs/installation/docker/
    image: deluan/navidrome:${NAVIDROME_VERS:-latest}
    container_name: navidrome
    user: "${UID}:${GID}" # should be owner of volumes
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M
    env_file: galaxy.env
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANSCHEDULE: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
      ND_LASTFM_ENABLED: true
      ND_LASTFM_APIKEY: ${LASTFM_API_KEY}
      ND_LASTFM_SECRET: ${LASTFM_SHARED_SECRET}
      # https://www.navidrome.org/docs/usage/backup/
      # Note: The optional backup process ONLY backs up the database (users, play counts, etc.). It does NOT back up music files or the config.
      ND_BACKUP_PATH: /backups
      ND_BACKUP_SCHEDULE: "0 0 * * *" # every 24 hours at 12am
      ND_BACKUP_COUNT: 7
    volumes:
      - ./navidrome/data:/data
      - ./navidrome/backups:/backups
      - ${MUSIC_PATH}:/music:ro
    ports:
      - 4533:4533
    networks:
      navidrome_net:
      scrobbler_net:

# ============================================================== #
# multi-scrobbler: https://github.com/wger-project/docker/blob/master/docker-compose.yml
# ============================================================== #

# Configuration: https://foxxmd.github.io/multi-scrobbler/docs/configuration/

  multi-scrobbler:
    image: foxxmd/multi-scrobbler:${MULTI_SCROB_VERS:-latest}
    container_name: multi-scrobbler
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    env_file: galaxy.env
    environment:
      - TZ=${TIMEZONE}
      - BASE_URL=${MS_BASE_URL}
      - SUBSONIC_USER=${SUBSONIC_USER}
      - SUBSONIC_PASSWORD=${SUBSONIC_PASSWORD}
      - SUBSONIC_URL=${SUBSONIC_URL}
      - LZ_USER=${LISTENBRAINZ_USER}
      - LZ_TOKEN=${LISTENBRAINZ_TOKEN}
      - MALOJA_URL=http://maloja:42010
      - MALOJA_API_KEY=${MALOJA_API_KEY}
      - PUID=${UID}
      - PGID=${GID}
    volumes:
      - ./multi-scrobbler/config:/config
    ports:
      - 9078:9078 # UI and API
    networks:
      scrobbler_net:

# ============================================================== #
# Maloja: https://github.com/krateng/maloja/blob/master/example-compose.yml
# ============================================================== #

# Configuration: https://github.com/krateng/maloja/blob/master/settings.md

  maloja:
    image: krateng/maloja:${MALOJA_VERS:-latest} # https://hub.docker.com/r/krateng/maloja/tags
    container_name: maloja
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    env_file: galaxy.env
    environment:
      - MALOJA_FORCE_PASSWORD=${MALOJA_ADMIN_PASS}
      - MALOJA_DATA_DIRECTORY=/data
      - MALOJA_PROXY_IMAGES=TRUE # Whether third party images should be downloaded and served directly by Maloja (instead of just linking their URL).
      - MALOJA_TIMEZONE=${TIMEZONE}
    volumes:
      - ./maloja/data:/data
    ports:
      - 42010:42010 # UI
    networks:
      scrobbler_net:

# ============================================================== #
# Audiobookshelf: https://www.audiobookshelf.org/docs/#docker-compose-install
# ============================================================== #

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:${ABS_VERS:-latest}
    container_name: audiobookshelf
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: galaxy.env
    environment:
      - AUDIOBOOKSHELF_UID=${UID}
      - AUDIOBOOKSHELF_GID=${GID}
    volumes:
      - ${BOOKS_PATH}:/books
      - ./audiobookshelf/metadata:/metadata
      - ./audiobookshelf/config:/config
    ports:
      - 13378:80
    networks:
      audiobookshelf_net:

# ============================================================== #
# AudioBookRequest: https://github.com/markbeep/AudioBookRequest
# ============================================================== #

  web:
    image: markbeep/audiobookrequest:${ABR_VERS:-latest} # https://hub.docker.com/r/markbeep/audiobookrequest/tags
    container_name: audiobookrequest
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
    env_file: galaxy.env
    volumes:
      - audiobookrequest-config:/config
    ports:
      - "8000:8000"
    networks:
      audiobookrequest_net:

# ============================================================== #
# Prometheus Node Exporter: https://github.com/prometheus/node_exporter
# ============================================================== #

  prometheus-node-exporter:
    image: quay.io/prometheus/node-exporter:${PROM_NODE_EXP_VERS:-latest} # https://quay.io/repository/prometheus/node-exporter?tab=tags
    container_name: prometheus-node-exporter
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    read_only: true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 64M
    pid: host
    env_file: galaxy.env
    environment:
      - TZ=${TIMEZONE:-Etc/UTC}
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
    network_mode: host

# ============================================================== #
# cAdvisor: https://github.com/google/cadvisor
# ============================================================== #

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${CADVISOR_VERS:-latest}
    container_name: cadvisor
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
    env_file: galaxy.env
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    network_mode: host

# ============================================================== #

volumes:
  audiobookrequest-config:

networks:
  jelly_net:
  navidrome_net:
  scrobbler_net:
  audiobookshelf_net:
  audiobookrequest_net:
