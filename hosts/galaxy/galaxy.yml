services:

# -----------------------------------------------------------------
# Jellyfin:
# -----------------------------------------------------------------

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:${JELLYFIN_VERSION} # OR jellyfin/jellyfin (official)
    container_name: jellyfin
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    runtime: nvidia
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - NVIDIA_VISIBLE_DEVICES=all
    devices:
      - /dev/nvidia-uvm
      - /dev/nvidia-uvm-tools
      - /dev/nvidia-modeset
      - /dev/nvidiactl
      - /dev/nvidia0
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ${SERIES_PATH}:/media-library/series:ro
      - ${MOVIES_PATH}:/media-library/movies:ro
    ports:
      - 8096:8096/tcp # http webUI
      - 8920:8920/tcp # https webUI
    networks:
      jelly_net:

# -----------------------------------------------------------------
# Jellyseerr:
# -----------------------------------------------------------------

  jellyseerr:
    image: fallenbagel/jellyseerr:${JELLYSEERR_VERSION}
    container_name: jellyseerr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    volumes:
      - ./jellyseerr/config:/app/config
    ports:
      - 5055:5055
    networks:
      jelly_net:

# -----------------------------------------------------------------
# Navidrome:
# -----------------------------------------------------------------

  navidrome: # https://www.navidrome.org/docs/installation/docker/
    image: deluan/navidrome:${NAVIDROME_VERSION}
    container_name: navidrome
    user: "${UID}:${GID}" # should be owner of volumes
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANSCHEDULE: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
      ND_LASTFM_ENABLED: true
      ND_LASTFM_APIKEY: ${LASTFM_API_KEY}
      ND_LASTFM_SECRET: ${LASTFM_SHARED_SECRET}
      # https://www.navidrome.org/docs/usage/backup/
      # Note: The optional backup process ONLY backs up the database (users, play counts, etc.). It does NOT back up music files or the config.
      ND_BACKUP_PATH: /backup 
      ND_BACKUP_SCHEDULE: "0 0 * * *" # every 24 hours at 12am
      ND_BACKUP_COUNT: 7
    volumes:
      - ./navidrome/data:/data
      - ./navidrome/backups:/backups
      - ./navidrome/backups/playlists:/backups/playlists
      - ${MUSIC_PATH}:/music:ro
    ports:
      - "4533:4533"
    networks:
      navidrome_net:

# -----------------------------------------------------------------
# Audiobookshelf: https://www.audiobookshelf.org/docs/#docker-compose-install
# -----------------------------------------------------------------

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:${ABS_VERS:-latest}
    container_name: audiobookshelf
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: galaxy.env
    environment:
      - AUDIOBOOKSHELF_UID=${UID}
      - AUDIOBOOKSHELF_GID=${GID}
    volumes:
      - ${BOOKS_PATH}:/books
      - ./audiobookshelf/metadata:/metadata
      - ./audiobookshelf/config:/config
    ports:
      - 13378:80
    networks:
      audiobookshelf_net:

# ---------------------------------------------

networks:
  jelly_net:
    driver: bridge
  navidrome_net:
    driver: bridge
  audiobookshelf_net:
    driver: bridge
