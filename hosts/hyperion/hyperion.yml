services:

# -----------------------------------------------------------------
# Linkwarden: https://docs.linkwarden.app/self-hosting/installation
# -----------------------------------------------------------------

  linkwarden:
    image: ghcr.io/linkwarden/linkwarden:latest
    container_name: linkwarden
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: hyperion.env
    environment:
      # DATABASE_URL = engine://username:password@host:port/dbname. This connection string will override all other database settings.
      - DATABASE_URL=postgresql://postgres:${LINKW_PG_PASSWORD}@postgres:5432/postgres
    volumes:
      - ./linkwarden/data:/data/data
    ports:
      - 3000:3000
    depends_on:
      - postgres
    networks:
      linkwarden_net:

  postgres:
    image: postgres:16-alpine
    container_name: linkwarden_db
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: hyperion.env
    environment:
      - POSTGRES_PASSWORD=${LINKW_PG_PASSWORD}
    volumes:
      - ./linkwarden/pgdata:/var/lib/postgresql/data
    networks:
      linkwarden_net:

# -------------------------------------------------
# Tandoor: https://docs.tandoor.dev/install/docker/
# -------------------------------------------------

  db_recipes:
    image: postgres:16-alpine
    container_name: tandoor-db
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: hyperion.env
    environment:
      - DB_ENGINE=${TANDOOR_DB_ENGINE}
      - POSTGRES_HOST=${TANDOOR_PG_HOST}
      - POSTGRES_DB=${TANDOOR_PG_DB}
      - POSTGRES_PORT=${TANDOOR_PG_PORT}
      - POSTGRES_USER=${TANDOOR_PG_USER}
      - POSTGRES_PASSWORD=${TANDOOR_PG_PASSWORD}
    volumes:
      - ./tandoor/postgresql:/var/lib/postgresql/data
    networks:
      tandoor_net:

  web_recipes:
    image: vabene1111/recipes
    container_name: tandoor
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: hyperion.env
    volumes:
      - ./tandoor/recipes:/opt/recipes/staticfiles
      - ./tandoor/mediafiles:/opt/recipes/mediafiles
      - nginx_config:/opt/recipes/nginx/conf.d # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
    depends_on:
      - db_recipes
    networks:
      tandoor_net:

  nginx_recipes:
    image: nginx:mainline-alpine
    container_name: tandoor-nginx
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    env_file: hyperion.env
    volumes:
      - ./tandoor/staticfiles:/static:ro
      - ./tandoor/mediafiles:/media:ro
      - nginx_config:/etc/nginx/conf.d:ro # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
    depends_on:
      - web_recipes
    ports:
      - 8086:80
    networks:
      tandoor_net:

# ---------------------------------

volumes:
  nginx_config:

networks:
  tandoor_net:
    driver: bridge
  linkwarden_net:
    driver: bridge
