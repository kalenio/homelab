services:

# ============================================================== #
# wger: https://github.com/wger-project/docker/tree/master
# ============================================================== #

  web:
    image: wger/server:${WGER_VERS:-latest}
    container_name: wger
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - ./wger.env
    volumes:
      - wger-static:/home/wger/static
      - ./media:/home/wger/media
    expose:
      - 8000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5
    networks:
      wger_net:

# ============================================================== #

  db:
    image: postgres:15-alpine
    container_name: wger-db
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
    env_file:
      - ./wger.env
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
      - TZ=America/Denver
    volumes:
      - ./postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      wger_net:

# ============================================================== #

  nginx:
    image: nginx:stable
    container_name: wger-nginx
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
    depends_on:
      - web
    volumes:
      - wger-static:/wger/static:ro
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./media:/wger/media:ro
    ports:
      - "8844:80"
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      wger_net:

# ============================================================== #

  cache:
    image: redis
    container_name: wger-cache
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    expose:
      - 6379
    volumes:
      - wger-redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      wger_net:

# ============================================================== #

  celery_worker:
    image: wger/server:latest
    container_name: wger-worker
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    command: /start-worker
    env_file:
      - ./wger.env
    volumes:
      - ./media:/home/wger/media
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      wger_net:

# ============================================================== #

  celery_beat:
    image: wger/server:latest
    container_name: wger-beat
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    command: /start-beat
    env_file:
      - ./wger.env
    volumes:
      - wger-celery-beat:/home/wger/beat/
    depends_on:
      celery_worker:
        condition: service_healthy
    networks:
      wger_net:

# ============================================================== #
# ============================================================== #

volumes:
  wger-static:
  wger-celery-beat:
  wger-redis-data:

networks:
  wger_net:
    driver: bridge
