services:

  ###### ----- Network ----- ######

  vpn:
    image: thrnz/docker-wireguard-pia:${VPN_VERS:-latest} # https://github.com/thrnz/docker-wireguard-pia
    container_name: docker-wireguard-pia
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      # May as well disable ipv6. Should be blocked anyway.
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    environment:
      - LOCAL_NETWORK=192.168.1.0/24
      - LOC=swiss
      - USER=${PIA_USER}
      - PASS=${PIA_PASSWORD}
      - PORT_FORWARDING=1
      - PORT_PERSIST=1 # Set to 1 to attempt to keep the same port forwarded when the container is restarted.
      - PORT_FILE=/pia-shared/forwarded_port.txt # The forwarded port number is dumped here for possible access by scripts in other containers. By default this is /pia-shared/port.dat.
      - KEEPALIVE=25 # This can be used to ensure incoming packets on an idle link aren't lost when behind NAT.
    volumes:
      - ./pia:/pia # Auth token is stored here
      - ./pia/shared:/pia-shared # If enabled, the forwarded port is dumped to /pia-shared/port.dat for potential use in other containers
    ports:
      - 8080:8080 # qbitorrent web ui
      - 8989:8989 # sonarr web ui
      - 7878:7878 # radarr web ui
      - 9696:9696 # prowlarr web ui
      - 6767:6767 # bazarr web ui
      - 8191:8191 # flaresolverr

  qb-port:
    image: charlocharlie/qbittorrent-port-forward-file:${QBPORT_VERS:-latest} # https://hub.docker.com/r/charlocharlie/qbittorrent-port-forward-file
    container_name: qb-port
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
    network_mode: "service:vpn"
    environment:
      - QBT_USERNAME:${QBT_USERNAME} # I could not get authentication to work properly without "bypassing authentication for clients on
      - QBT_PASSWORD:${QBT_PASSWORD} # localhost" in qb settings, and i suspect it is due to the vuetorrent alternate web UI.
      - QBT_ADDR:${QBT_ADDR}
      - PORT_FILE:/config/forwarded_port.txt
    volumes:
      - ./pia/shared:/config:ro

  flaresolverr:
    image: flaresolverr/flaresolverr:${FLARESOLVERR_VERSION}
    container_name: flaresolverr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
    network_mode: "service:vpn"
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    depends_on:
      vpn:
        condition: service_healthy

  qbittorrent: # https://docs.linuxserver.io/images/docker-qbittorrent/
    image: lscr.io/linuxserver/qbittorrent:${QBITTORRENT_VERSION}
    container_name: qbittorrent
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8192M
    network_mode: "service:vpn"
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
      - DOCKER_MODS=ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest # optional custom web ui. Must enable alternate web ui in qbittorrent options and point file location to /vuetorrent 
    volumes:
      - ./qbittorrent/config:/config
      - ${TORRENTS_PATH}:/nebula-downloads/torrents:rw
      - ${TORRENTS_PATH}/mam.cookies:/mam.cookies # For MyAnonaMouse dynamic IP update
    depends_on:
      vpn:
        condition: service_healthy

  ###### ----- Media Management ----- ######

  sonarr: # https://docs.linuxserver.io/images/docker-sonarr/?h=sonarr
    image: lscr.io/linuxserver/sonarr:${SONARR_VERSION}
    container_name: sonarr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
    network_mode: "service:vpn"
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr/config:/config
      - ${DOWNLOADS_PATH}:/nebula-downloads
      - ${SERIES_PATH}:/nebula-media/series
    depends_on:
      vpn:
        condition: service_healthy

  radarr: # https://docs.linuxserver.io/images/docker-radarr/#media-folders
    image: lscr.io/linuxserver/radarr:${RADARR_VERSION}
    container_name: radarr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
    network_mode: "service:vpn"
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr/config:/config
      - ${DOWNLOADS_PATH}:/nebula-downloads
      - ${MOVIES_PATH}:/nebula-media/movies
    depends_on:
      vpn:
        condition: service_healthy

  prowlarr: # https://docs.linuxserver.io/images/docker-prowlarr/
    image: lscr.io/linuxserver/prowlarr:${PROWLARR_VERSION}
    container_name: prowlarr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
    network_mode: "service:vpn"
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr/config:/config
    depends_on:
      vpn:
        condition: service_healthy

  bazarr:
    image: lscr.io/linuxserver/bazarr:${BAZARR_VERSION}
    container_name: bazarr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 256M
    network_mode: "service:vpn"
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./bazarr/config:/config
      - ${MOVIES_PATH}:/nebula-media/movies
      - ${SERIES_PATH}:/nebula-media/series
    depends_on:
      vpn:
        condition: service_healthy
