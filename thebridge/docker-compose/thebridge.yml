services:

  homepage:
    image: ghcr.io/gethomepage/homepage:${HOMEPAGE_VER}
    container_name: homepage
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - homepage_config:/app/config
      - homepage_images:/app/public/images
#      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations. USE SOCKET PROXY INSTEAD: https://github.com/Tecnativa/docker-socket-proxy
    ports:
      - 3000:3000
    networks:
      thebridge_net:
      
  homeassistant:
    image: homeassistant/home-assistant:${HOMEASSISTANT_VER}
    container_name: homeassistant
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./homeassistant/config:/config
    ports:
      - 8123:8123
    networks:
      thebridge_net:

# ----------------------------- #
# -------- Monitoring --------- #
# ----------------------------- #

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VER}
    container_name: prometheus
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    user: "${UID}:${GID}"
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # Main config. Sets global settings, scrape targets, etc. Create file prior to launching container
      - ./prometheus/data:/prometheus
    ports:
      - 9090:9090
    networks:
      thebridge_net:

  prometheus-node-exporter:
    image: quay.io/prometheus/node-exporter:${PROM_NODE_EXP_VER}
    container_name: prometheus-node-exporter
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
#    cap_add:
#      - SYS_TIME     # Optional, for time metrics if needed
#      - NET_ADMIN    # Optional, for advanced network metrics
    user: "${UID}:${GID}"
#    pid: host
#    volumes:
#      - '/:/host:ro,rslave'
#    ports:
#      - 9100:9100
    network_mode: host

  uptime-kuma:
    image: louislam/uptime-kuma:${UPTIME_KUMA_VER}
    container_name: uptime-kuma
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=${UID}
      - PGID=${UID}
      - TZ=${TIMEZONE}
    volumes:
      - ./uptime-kuma/data:/data
    ports:
      - 3001:3001 # <Host/External Port>:<Container/Internal Port>
    networks:
      thebridge_net:

  grafana:
    image: grafana/grafana:${GRAFANA_VER}
    container_name: grafana
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    user: "${UID}:${GID}"
    environment:
      - TZ=${TIMEZONE}
      - GF_SERVER_ROOT_URL=${GRAFANA_SERVER_URL}
      - GF_INSTALL_PLUGINS=grafana-clock-panel #installs official clock plugin
    volumes:
      - ./grafana/data:/var/lib/grafana
    ports:
      - 3002:3000 # <Host/External Port>:<Container/Internal Port>
    networks:
      thebridge_net:

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:${SPEEDTEST_TRACKER_VER}
    container_name: speedtest-tracker
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - APP_KEY=${SPEEDTEST_APP_KEY} # How to generate an app key: https://speedtest-tracker.dev/
      - DB_CONNECTION=pgsql # postgres
      - SPEEDTEST_SCHEDULE="0 */6 * * *" # cron format, set to run at minute 0 past every 6th hour
      - SPEEDTEST_SERVERS=8839 # Find with: 'docker exec speedtest-tracker' 'php /app/www/artisan app:ookla-list-servers'
      - DB_HOST=${POSTGRES_DB_HOST} # optional
      - DB_PORT=5432 # optional
      - DB_DATABASE=${POSTGRES_DATABASE_NAME} # optional
      - DB_USERNAME=${POSTGRES_USER} # optional
      - DB_PASSWORD=${POSTGRES_PASSWORD} # optional
      - PRUNE_RESULTS_OLDER_THAN=365 # optional, days to keep test results
#      - APP_DEBUG=true
    volumes:
      - speedtest-tracker_config:/config
      - speedtest-tracker_keys:/config/keys
    ports:
      - 8080:80 # web UI
      - 8443:443
    networks:
      thebridge_net:

  postgres-db: # db for speedtest-tracker
    image: postgres:${POSTGRES_VER}
    container_name: postgres-db
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      thebridge_net:
      
# ----------------------------- #
# ------- Notifications ------- #
# ----------------------------- #
      
  ntfy:
    image: binwiederhier/ntfy:${NTFY_VER}
    container_name: ntfy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    command:
      - serve
    healthcheck: # optional: remember to adapt the host:port to your environment
      test:
        [
          'CMD-SHELL',
          "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1",
        ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      - PUID=${UID}
      - PGID=${UID}
      - TZ=${TIMEZONE}
    volumes:
      - ./ntfy/cache:/var/cache/ntfy
      - ./ntfy/data:/etc/ntfy
    ports:
      - 8000:80
    networks:
      thebridge_net:

  apprise-api:
    image: lscr.io/linuxserver/apprise-api:${APPRISE_VER}
    container_name: apprise
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - APPRISE_ATTACH_SIZE=64 # optional, max attachment size in Mb. 0 disables attachments.
    volumes:
      - ./apprise/config:/config
      - ./apprise/attachments:/attachments # optional
    ports:
      - 8888:8000
    networks:
      thebridge_net:

networks:
  thebridge_net:

volumes:
  homepage_config:
  homepage_images:
  speedtest-tracker_config:
  speedtest-tracker_keys:
  postgres-data:
